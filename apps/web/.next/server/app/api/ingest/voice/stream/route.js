"use strict";(()=>{var e={};e.id=9764,e.ids=[9764],e.modules={30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},6113:e=>{e.exports=require("crypto")},57147:e=>{e.exports=require("fs")},41808:e=>{e.exports=require("net")},22037:e=>{e.exports=require("os")},4074:e=>{e.exports=require("perf_hooks")},12781:e=>{e.exports=require("stream")},24404:e=>{e.exports=require("tls")},84151:(e,t,r)=>{r.r(t),r.d(t,{headerHooks:()=>w,originalPathname:()=>g,requestAsyncStorage:()=>u,routeModule:()=>d,serverHooks:()=>m,staticGenerationAsyncStorage:()=>l,staticGenerationBailout:()=>v});var o={};r.r(o),r.d(o,{POST:()=>POST});var i=r(10884),s=r(16132),a=r(95798),n=r(37552),p=r(1345),c=r(37058);async function POST(e){try{let t=await (0,p.n5)();if(!t)return a.Z.json({error:"Unauthorized"},{status:401});let r=await e.formData(),o=r.get("audio"),i=r.get("workspaceId");if(!o)return a.Z.json({error:"No audio file provided"},{status:400});if(!i)return a.Z.json({error:"Workspace ID is required"},{status:400});let s=await o.arrayBuffer(),d=await (0,c.KR)(s),u=await (0,c.iS)(d,c.Ax.people,"Extract all people mentioned in this conversation with their roles and context."),l=await (0,c.iS)(d,c.Ax.insights,"Extract actionable insights, opportunities, and follow-ups from this conversation."),m=await (0,c.iS)(d,c.Ax.relationships,"Identify relationships between people mentioned in this conversation."),w={id:crypto.randomUUID(),workspaceId:i,ownerId:t,kind:"voice_note",title:`Voice Note - ${new Date().toLocaleDateString()}`,description:l?.insights[0]?.description||"Voice note captured",occurredAt:new Date,transcript:d,createdAt:new Date,updatedAt:new Date};try{if(await n.db.insert(n.qU).values(w),u?.people)for(let e of u.people){let r={id:crypto.randomUUID(),workspaceId:i,ownerId:t,fullName:e.fullName,primaryEmail:e.email||null,createdAt:new Date,updatedAt:new Date};try{await n.db.insert(n.lB).values(r),e.role&&await n.db.insert(n.QS).values({id:crypto.randomUUID(),workspaceId:i,ownerId:t,subjectType:"person",subjectId:r.id,key:"role",value:e.role,confidence:85,source:"voice",lawfulBasis:"legitimate_interest",observedAt:new Date}),e.company&&await n.db.insert(n.QS).values({id:crypto.randomUUID(),workspaceId:i,ownerId:t,subjectType:"person",subjectId:r.id,key:"company",value:e.company,confidence:85,source:"voice",lawfulBasis:"legitimate_interest",observedAt:new Date})}catch(e){console.log("Could not save person:",e)}}return a.Z.json({success:!0,message:"Voice note processed with AI",encounterId:w.id,transcript:d,extracted:{people:u?.people||[],insights:l?.insights||[],relationships:m?.relationships||[]}})}catch(e){return console.log("Database operation failed, returning extracted data:",e),a.Z.json({success:!0,message:"Voice note processed (demo mode)",encounterId:w.id,transcript:d,extracted:{people:u?.people||[],insights:l?.insights||[],relationships:m?.relationships||[]}})}}catch(e){return console.error("Voice processing failed:",e),a.Z.json({error:"Failed to process voice note"},{status:500})}}let d=new i.AppRouteRouteModule({definition:{kind:s.x.APP_ROUTE,page:"/api/ingest/voice/stream/route",pathname:"/api/ingest/voice/stream",filename:"route",bundlePath:"app/api/ingest/voice/stream/route"},resolvedPagePath:"/Users/israelwilson/Developer/rhiz-intent-mvp/apps/web/app/api/ingest/voice/stream/route.ts",nextConfigOutput:"",userland:o}),{requestAsyncStorage:u,staticGenerationAsyncStorage:l,serverHooks:m,headerHooks:w,staticGenerationBailout:v}=d,g="/api/ingest/voice/stream/route"},1345:(e,t,r)=>{async function getUserId(){return"demo-user-123"}r.d(t,{n5:()=>getUserId})}};var t=require("../../../../../webpack-runtime.js");t.C(e);var __webpack_exec__=e=>t(t.s=e),r=t.X(0,[729,5798,9155,8332,4589,7552,7058],()=>__webpack_exec__(84151));module.exports=r})();