"use strict";exports.id=786,exports.ids=[786],exports.modules={786:(e,t,o)=>{o.d(t,{FI:()=>generateSpeech,Fk:()=>isElevenLabsConfigured,xf:()=>getElevenLabsConfig});var s=o(14333);let ElevenLabsClient=class ElevenLabsClient{constructor(e){this.baseUrl="https://api.elevenlabs.io/v1",this.config=e}async request(e,t={}){let o=`${this.baseUrl}${e}`,n={Accept:"application/json","xi-api-key":this.config.apiKey},r=await fetch(o,{...t,headers:{...n,...t.headers}});if(!r.ok){let t=await r.text();throw s.k.error("ElevenLabs API error",Error(t),{component:"elevenlabs",endpoint:e,status:r.status,statusText:r.statusText}),Error(`ElevenLabs API error: ${r.status} ${r.statusText}`)}return t.headers&&"object"==typeof t.headers&&"Accept"in t.headers&&"audio/*"===t.headers.Accept?r.arrayBuffer():r.json()}async generateSpeech(e){try{s.k.info("Generating speech with ElevenLabs",{component:"elevenlabs",textLength:e.text.length,voiceId:e.voiceId||this.config.voiceId});let t=e.voiceId||this.config.voiceId,o=e.modelId||this.config.modelId,n=e.outputFormat||this.config.outputFormat,r=await this.request(`/text-to-speech/${t}`,{method:"POST",headers:{"Content-Type":"application/json",Accept:"audio/*"},body:JSON.stringify({text:e.text,model_id:o,voice_settings:{stability:.5,similarity_boost:.75,style:0,use_speaker_boost:!0,...e.voiceSettings},output_format:n})});return Buffer.from(r)}catch(e){throw s.k.error("Failed to generate speech",e,{component:"elevenlabs"}),e}}async getVoices(){try{s.k.info("Fetching available voices",{component:"elevenlabs"});let e=await this.request("/voices");return e.voices}catch(e){throw s.k.error("Failed to fetch voices",e,{component:"elevenlabs"}),e}}async getVoice(e){try{return s.k.info("Fetching voice details",{component:"elevenlabs",voiceId:e}),await this.request(`/voices/${e}`)}catch(t){throw s.k.error("Failed to fetch voice",t,{component:"elevenlabs",voiceId:e}),t}}async getModels(){try{s.k.info("Fetching available models",{component:"elevenlabs"});let e=await this.request("/models");return e.models}catch(e){throw s.k.error("Failed to fetch models",e,{component:"elevenlabs"}),e}}async getHistory(){try{s.k.info("Fetching generation history",{component:"elevenlabs"});let e=await this.request("/history");return e.history}catch(e){throw s.k.error("Failed to fetch history",e,{component:"elevenlabs"}),e}}};let n={apiKey:process.env.ELEVENLABS_API_KEY||"",voiceId:process.env.ELEVENLABS_VOICE_ID||"21m00Tcm4TlvDq8ikWAM",modelId:process.env.ELEVENLABS_MODEL_ID||"eleven_monolingual_v1",outputFormat:"mp3",sampleRate:44100},r=new ElevenLabsClient(n);async function generateSpeech(e,t){return r.generateSpeech({text:e,...t})}function isElevenLabsConfigured(){return!!(process.env.ELEVENLABS_API_KEY&&process.env.ELEVENLABS_VOICE_ID)}function getElevenLabsConfig(){return{apiKey:process.env.ELEVENLABS_API_KEY?"Configured":"Not configured",voiceId:process.env.ELEVENLABS_VOICE_ID||"Not configured",modelId:process.env.ELEVENLABS_MODEL_ID||"Not configured"}}}};